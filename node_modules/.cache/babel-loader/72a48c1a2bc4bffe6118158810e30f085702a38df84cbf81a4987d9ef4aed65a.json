{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AKASH\\\\VS\\\\React_Gym\\\\gym\\\\src\\\\Pages\\\\ExerciseDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Box } from '@mui/material';\nimport { exerciseOptions, fetchData, youtubeOptions } from '../Api/fetchData';\nimport Detail from '../Component/Detail';\nimport ExerciseVideos from '../components/ExerciseVideos';\n// import SimilarExercises from '../components/SimilarExercises';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExerciseDetail = () => {\n  _s();\n  const [exerciseDetail, setExerciseDetail] = useState({});\n  const [exerciseVideos, setExerciseVideos] = useState([]);\n  const [targetMuscleExercises, setTargetMuscleExercises] = useState([]);\n  const [equipmentExercises, setEquipmentExercises] = useState([]);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n    const fetchExercisesData = async () => {\n      const exerciseDbUrl = 'https://exercisedb.p.rapidapi.com';\n      const youtubeSearchUrl = 'https://youtube-search-and-download.p.rapidapi.com';\n      const exerciseDetailData = await fetchData(`${exerciseDbUrl}/exercises/exercise/${id}`, exerciseOptions);\n      setExerciseDetail(exerciseDetailData);\n      const exerciseVideosData = await fetchData(`${youtubeSearchUrl}/search?query=${exerciseDetailData.name} exercise`, youtubeOptions);\n      setExerciseVideos(exerciseVideosData.contents);\n      const targetMuscleExercisesData = await fetchData(`${exerciseDbUrl}/exercises/target/${exerciseDetailData.target}`, exerciseOptions);\n      setTargetMuscleExercises(targetMuscleExercisesData);\n      const equimentExercisesData = await fetchData(`${exerciseDbUrl}/exercises/equipment/${exerciseDetailData.equipment}`, exerciseOptions);\n      setEquipmentExercises(equimentExercisesData);\n    };\n    fetchExercisesData();\n  }, [id]);\n\n  //   if (!exerciseDetail) return <div>No Data</div>;\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mt: {\n        lg: '96px',\n        xs: '60px'\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(Detail, {\n      exerciseDetail: exerciseDetail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExerciseVideos, {\n      exerciseVideos: exerciseVideos,\n      name: exerciseDetail.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(ExerciseDetail, \"x76fAqXNpsUxBxsjjmcfw76mkJI=\", false, function () {\n  return [useParams];\n});\n_c = ExerciseDetail;\nexport default ExerciseDetail;\nvar _c;\n$RefreshReg$(_c, \"ExerciseDetail\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Box","exerciseOptions","fetchData","youtubeOptions","Detail","ExerciseVideos","ExerciseDetail","exerciseDetail","setExerciseDetail","exerciseVideos","setExerciseVideos","targetMuscleExercises","setTargetMuscleExercises","equipmentExercises","setEquipmentExercises","id","window","scrollTo","top","behavior","fetchExercisesData","exerciseDbUrl","youtubeSearchUrl","exerciseDetailData","exerciseVideosData","name","contents","targetMuscleExercisesData","target","equimentExercisesData","equipment","mt","lg","xs"],"sources":["C:/Users/AKASH/VS/React_Gym/gym/src/Pages/ExerciseDetail.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Box } from '@mui/material';\r\n\r\nimport { exerciseOptions, fetchData, youtubeOptions } from '../Api/fetchData';\r\nimport Detail from '../Component/Detail';\r\nimport ExerciseVideos from '../components/ExerciseVideos';\r\n// import SimilarExercises from '../components/SimilarExercises';\r\n\r\nconst ExerciseDetail = () => {\r\n  const [exerciseDetail, setExerciseDetail] = useState({});\r\n  const [exerciseVideos, setExerciseVideos] = useState([]);\r\n  const [targetMuscleExercises, setTargetMuscleExercises] = useState([]);\r\n  const [equipmentExercises, setEquipmentExercises] = useState([]);\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n\r\n    const fetchExercisesData = async () => {\r\n      const exerciseDbUrl = 'https://exercisedb.p.rapidapi.com';\r\n      const youtubeSearchUrl = 'https://youtube-search-and-download.p.rapidapi.com';\r\n\r\n      const exerciseDetailData = await fetchData(`${exerciseDbUrl}/exercises/exercise/${id}`, exerciseOptions);\r\n      setExerciseDetail(exerciseDetailData);\r\n\r\n      const exerciseVideosData = await fetchData(`${youtubeSearchUrl}/search?query=${exerciseDetailData.name} exercise`, youtubeOptions);\r\n      setExerciseVideos(exerciseVideosData.contents);\r\n\r\n      const targetMuscleExercisesData = await fetchData(`${exerciseDbUrl}/exercises/target/${exerciseDetailData.target}`, exerciseOptions);\r\n      setTargetMuscleExercises(targetMuscleExercisesData);\r\n\r\n      const equimentExercisesData = await fetchData(`${exerciseDbUrl}/exercises/equipment/${exerciseDetailData.equipment}`, exerciseOptions);\r\n      setEquipmentExercises(equimentExercisesData);\r\n    };\r\n\r\n    fetchExercisesData();\r\n  }, [id]);\r\n\r\n//   if (!exerciseDetail) return <div>No Data</div>;\r\n\r\n  return (\r\n    <Box sx={{ mt: { lg: '96px', xs: '60px' } }}>\r\n      <Detail exerciseDetail={exerciseDetail} />\r\n      <ExerciseVideos exerciseVideos={exerciseVideos} name={exerciseDetail.name} />\r\n      {/* <SimilarExercises targetMuscleExercises={targetMuscleExercises} equipmentExercises={equipmentExercises} /> */}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ExerciseDetail;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,GAAG,QAAQ,eAAe;AAEnC,SAASC,eAAe,EAAEC,SAAS,EAAEC,cAAc,QAAQ,kBAAkB;AAC7E,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,cAAc,MAAM,8BAA8B;AACzD;AAAA;AAEA,MAAMC,cAAc,GAAG,MAAM;EAAA;EAC3B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxD,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACa,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtE,MAAM,CAACe,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM;IAAEiB;EAAG,CAAC,GAAGhB,SAAS,EAAE;EAE1BF,SAAS,CAAC,MAAM;IACdmB,MAAM,CAACC,QAAQ,CAAC;MAAEC,GAAG,EAAE,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;IAE/C,MAAMC,kBAAkB,GAAG,YAAY;MACrC,MAAMC,aAAa,GAAG,mCAAmC;MACzD,MAAMC,gBAAgB,GAAG,oDAAoD;MAE7E,MAAMC,kBAAkB,GAAG,MAAMrB,SAAS,CAAE,GAAEmB,aAAc,uBAAsBN,EAAG,EAAC,EAAEd,eAAe,CAAC;MACxGO,iBAAiB,CAACe,kBAAkB,CAAC;MAErC,MAAMC,kBAAkB,GAAG,MAAMtB,SAAS,CAAE,GAAEoB,gBAAiB,iBAAgBC,kBAAkB,CAACE,IAAK,WAAU,EAAEtB,cAAc,CAAC;MAClIO,iBAAiB,CAACc,kBAAkB,CAACE,QAAQ,CAAC;MAE9C,MAAMC,yBAAyB,GAAG,MAAMzB,SAAS,CAAE,GAAEmB,aAAc,qBAAoBE,kBAAkB,CAACK,MAAO,EAAC,EAAE3B,eAAe,CAAC;MACpIW,wBAAwB,CAACe,yBAAyB,CAAC;MAEnD,MAAME,qBAAqB,GAAG,MAAM3B,SAAS,CAAE,GAAEmB,aAAc,wBAAuBE,kBAAkB,CAACO,SAAU,EAAC,EAAE7B,eAAe,CAAC;MACtIa,qBAAqB,CAACe,qBAAqB,CAAC;IAC9C,CAAC;IAEDT,kBAAkB,EAAE;EACtB,CAAC,EAAE,CAACL,EAAE,CAAC,CAAC;;EAEV;;EAEE,oBACE,QAAC,GAAG;IAAC,EAAE,EAAE;MAAEgB,EAAE,EAAE;QAAEC,EAAE,EAAE,MAAM;QAAEC,EAAE,EAAE;MAAO;IAAE,CAAE;IAAA,wBAC1C,QAAC,MAAM;MAAC,cAAc,EAAE1B;IAAe;MAAA;MAAA;MAAA;IAAA,QAAG,eAC1C,QAAC,cAAc;MAAC,cAAc,EAAEE,cAAe;MAAC,IAAI,EAAEF,cAAc,CAACkB;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAEzE;AAEV,CAAC;AAAC,GAvCInB,cAAc;EAAA,QAKHP,SAAS;AAAA;AAAA,KALpBO,cAAc;AAyCpB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}